name: V8 Build Test

on: push

jobs:
  build:
    name: Build v8 for ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            ccache-path: ~/.ccache
          - os: macos-latest
            ccache-path: ~/Library/Caches/ccache
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Restore v8 Cache
        uses: actions/cache@v2
        with:
          path: |
            v8
            .gclient_entries
            .cipd
          key: ${{ runner.os }}:libv8:v8:${{ hashFiles('**/VERSION') }}

      - name: Restore CCache
        uses: actions/cache@v2
        with:
          path: ${{ matrix.ccache-path }}
          key: ${{ runner.os }}:libv8:ccache:${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}:libv8:ccache:

      - name: Setup ccache for ${{ matrix.os }}
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update && sudo apt-get install -yq ccache
          sudo update-ccache-symlinks
          echo "/usr/lib/ccache" >> $GITHUB_PATH

      - name: Setup ccache for ${{ matrix.os }}
        if: matrix.os == 'macos-latest'
        run: |
          brew install ccache
          echo "CCACHE_CPP2=yes" >> $GITHUB_PATH
          echo "CCACHE_SLOPPINESS=time_macros" >> $GITHUB_PATH
          echo "$(brew --prefix ccache)/libexec" >> $GITHUB_PATH

      - name: Download v8 source
        run: sh v8_download.sh

      - name: Compile v8
        run: sh v8_compile.sh

      - name: Show ccache status
        run: ccache -s

      - name: Test v8
        run: sh v8_test.sh

      - name: Archive v8 library
        uses: actions/upload-artifact@v2
        with:
          name: v8_${{ runner.os }}
          path: libv8_monolith.a
          retention-days: 7
